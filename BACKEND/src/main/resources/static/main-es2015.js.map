{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-certificate/add-certificate.component.ts","./src/app/components/add-certificate/add-certificate.component.html","./src/app/components/add-selfsigned/add-selfsigned.component.ts","./src/app/components/add-selfsigned/add-selfsigned.component.html","./src/app/components/admin-home-page/admin-home-page.component.ts","./src/app/components/admin-home-page/admin-home-page.component.html","./src/app/components/all-certificates/all-certificates.component.ts","./src/app/components/all-certificates/all-certificates.component.html","./src/app/components/login-component/login-component.component.ts","./src/app/components/login-component/login-component.component.html","./src/app/material-module.ts","./src/app/models/admin.ts","./src/app/models/role.ts","./src/app/models/user.ts","./src/app/services/admin.service.ts","./src/app/services/certificate-service.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\nimport {AddCertificateComponent} from './components/add-certificate/add-certificate.component';\r\nimport {AddSelfsignedComponent} from './components/add-selfsigned/add-selfsigned.component';\r\nimport {AllCertificatesComponent} from './components/all-certificates/all-certificates.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponentComponent,\r\n      },\r\n      {\r\n        path: 'admin/home',\r\n        component: AdminHomePageComponent\r\n      },\r\n  {\r\n      path: 'admin/add-certificate',\r\n    component: AddCertificateComponent\r\n  },\r\n  {\r\n    path: 'admin/add-selfsigned',\r\n    component: AddSelfsignedComponent\r\n  },\r\n  {\r\n    path: 'admin/all-certificates',\r\n    component: AllCertificatesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private breakpointObserver: BreakpointObserver,\r\n    private userService: UserService\r\n    ) { }\r\n\r\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n      .pipe(\r\n        map((result) => result.matches),\r\n        shareReplay()\r\n      );\r\n\r\n      public isLoggedIn() {\r\n        return this.userService.isLoggedIn();\r\n      }\r\n      public isNone(){\r\n        return this.userService.isNone();\r\n      }\r\n      public isAdmin() {\r\n        return this.userService.isAdmin();\r\n      }\r\n      public onLogout() {\r\n        this.userService.logout();\r\n      }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === true\">\r\n      <mat-toolbar>Menu</mat-toolbar>\r\n        <mat-nav-list *ngIf = \"isNone()\">\r\n          <a mat-list-item routerLink=\"/login\">Log in</a>\r\n        </mat-nav-list>\r\n\r\n        <mat-nav-list *ngIf=\"isAdmin()\">\r\n          <a mat-list-item routerLink=\"/admin/add-certificate\">Add Certificate</a>\r\n          <a mat-list-item routerLink=\"/admin/add-selfsigned\">Add SelfSigned Certificate</a>\r\n          <a mat-list-item routerLink=\"/admin/all-certificates\">All Certificates</a>\r\n          <a mat-list-item (click)=\"onLogout()\">Log out</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <mat-toolbar>\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">Menu</mat-icon>\r\n        </button>\r\n        <span>P I K</span>\r\n      </mat-toolbar>\r\n      <!-- Add Content Here -->\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddCertificateComponent } from './components/add-certificate/add-certificate.component';\nimport { AddSelfsignedComponent } from './components/add-selfsigned/add-selfsigned.component';\nimport { AllCertificatesComponent } from './components/all-certificates/all-certificates.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponentComponent,\r\n    AdminHomePageComponent,\r\n    AddCertificateComponent,\r\n    AddSelfsignedComponent,\r\n    AllCertificatesComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NoopAnimationsModule,\r\n    DemoMaterialModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateModel} from '../../models/certificateModel';\nimport {HttpClient} from '@angular/common/http';\nimport {CertificateServiceService} from '../../services/certificate-service.service';\nimport {CertificateDB} from '../../models/certificateDB';\n\n@Component({\n  selector: 'app-add-certificate',\n  templateUrl: './add-certificate.component.html',\n  styleUrls: ['./add-certificate.component.css']\n})\nexport class AddCertificateComponent implements OnInit {\n\n  model: CertificateModel = {\n    startDate: '',\n    endDate: '',\n    serialNumber: '',\n    name: '',\n    surname: '',\n    country: '',\n    organization: '',\n    organizationUnit: '',\n    email: '',\n    type: '',\n    alias: '',\n    issuerSerialNumber: '',\n  };\n  listOfPossibleIssuers: CertificateDB [];\n  constructor(private http: HttpClient ,\n              private certService: CertificateServiceService ) {}\n\n  ngOnInit(): void {\n    this.certService.getAllPossibleIssuers().subscribe(\n      data => {\n        this.listOfPossibleIssuers = data;\n      },\n      error => {\n        console.log('Error occured', error);\n      }\n    );\n  }\n\n  generateCertificate(): void {\n    const url = 'https://localhost:8443/certificate';\n\n\n    this.http.post(url, this.model).subscribe(\n      res => {\n        alert('Uspesno');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n\n\n}\n","\r\n  <div class=\"row\">\r\n    <div class=\"offset-3\"></div>\r\n    <div class=\"col-md-6\">\r\n      <form name=\"certificateForm\" #f=\"ngForm\" (ngSubmit)=\"generateCertificate()\" novalidate class=\"feedback-form\">\r\n\r\n        <div class=\"form-group\">\r\n          <b>Choose type:</b><br><br>\r\n\r\n          <input type=\"radio\" id=\"intermediate\" name=\"type\" [(ngModel)]=\"model.type\" value=\"INTERMEDIATE\">\r\n          <label for=\"intermediate\" style=\"padding-right:20px;\">Intermediate</label>\r\n          <input type=\"radio\" id=\"client\" name=\"type\" [(ngModel)]=\"model.type\" value=\"CLIENT\">\r\n          <label for=\"client\">Client</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <h4><b>Choose issuer:</b></h4>\r\n          <select class=\"form-control\" [(ngModel)]=\"model.issuerSerialNumber\" name=\"issuerSerialNumber\">\r\n            <option  *ngFor=\" let issuer of listOfPossibleIssuers \" value=\"{{issuer.serialNumber}}\">{{issuer.subjectCommonName}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\" >\r\n          <h4><b>Client data</b></h4>\r\n          <div class=\"form-group\">\r\n            <label>Name:</label>\r\n            <input type=\"text\"\r\n                   placeholder=\"Name\"\r\n                   class=\"form-control\" name=\"name\"\r\n                   [(ngModel)]=\"model.name\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" >\r\n            <label>Surname:</label>\r\n            <input type=\"text\" name=\"surname\"\r\n                   placeholder=\"Surname\"\r\n                   class=\"form-control\"\r\n                   [(ngModel)]=\"model.surname\"\r\n            />\r\n          </div>\r\n          <label>Country:</label>\r\n          <input type=\"text\" name=\"country\"\r\n                 placeholder=\"Country\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)]=\"model.country\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\" >\r\n          <label>Organization:</label>\r\n          <input type=\"text\" name=\"organization\"\r\n                 placeholder=\"Organization\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)]=\"model.organization\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Organization unit:</label>\r\n          <input type=\"text\"\r\n                 placeholder=\"Organization unit\"\r\n                 class=\"form-control\" name=\"organizationUnit\"\r\n                 [(ngModel)]=\"model.organizationUnit\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>E-mail:</label>\r\n          <input type=\"email\"\r\n                 placeholder=\"example@example.com\"\r\n                 class=\"form-control\" name=\"email\"\r\n                 [(ngModel)]=\"model.email\"\r\n\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"startDate\">Start date:</label>\r\n          <input type=\"date\" id=\"startDate\"\r\n                 class=\"form-control\"\r\n                 name=\"startDate\"\r\n                 placeholder=\"Start date\"\r\n                 [(ngModel)]=\"model.startDate\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"endDate\">End date:</label>\r\n          <input type=\"date\" id=\"endDate\"\r\n                 class=\"form-control\"\r\n                 name=\"endDate\"\r\n                 placeholder=\"End date\"\r\n                 [(ngModel)]=\"model.endDate\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"submit\" class=\"btn btn-danger\" value=\"Generate certificate\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateModel} from '../../models/certificateModel';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-selfsigned',\n  templateUrl: './add-selfsigned.component.html',\n  styleUrls: ['./add-selfsigned.component.css']\n})\nexport class AddSelfsignedComponent implements OnInit {\n\n\n  model: CertificateModel = {\n    startDate: '',\n    endDate: '',\n    serialNumber: '',\n    name: '',\n    surname: '',\n    country: '',\n    organization: '',\n    organizationUnit: '',\n    email: '',\n    type: '',\n    alias: '',\n    issuerSerialNumber: ''\n  };\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n\n\n  }\n\n\n  generateSelfSignedCertificate() {\n    const url = 'https://localhost:8443/certificate/selfSigned/generate';\n    this.http.post(url, this.model).subscribe(\n      res => {\n        this.router.navigate(['/admin/home']);\n        alert('Uspesno');\n      },\n      error => {\n        alert('Error.');\n        console.log('Error');\n      }\n    );\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"offset-3\"></div>\n  <div class=\"col-md-6\">\n    <form name=\"certificateForm\" #f=\"ngForm\" (ngSubmit)=\"generateSelfSignedCertificate()\" novalidate class=\"feedback-form\">\n\n      <div class=\"form-group\">\n        <h4><b>Client data:</b></h4>\n        <div class=\"form-group\">\n          <label>Name:</label>\n          <input type=\"text\"\n                 placeholder=\"Name\"\n                 class=\"form-control\" name=\"name\"\n                 [(ngModel)]=\"model.name\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>Surname:</label>\n          <input type=\"text\" name=\"surname\"\n                 placeholder=\"Surname\"\n                 class=\"form-control\"\n                 [(ngModel)]=\"model.surname\"\n          />\n        </div>\n        <label>Country:</label>\n        <input type=\"text\" name=\"country\"\n               placeholder=\"Country\"\n               class=\"form-control\"\n               [(ngModel)]=\"model.country\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Organization:</label>\n        <input type=\"text\" name=\"organization\"\n               placeholder=\"Organization\"\n               class=\"form-control\"\n               [(ngModel)]=\"model.organization\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Organization unit:</label>\n        <input type=\"text\"\n               placeholder=\"Organization unit\"\n               class=\"form-control\" name=\"organizationUnit\"\n               [(ngModel)]=\"model.organizationUnit\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>E-mail:</label>\n        <input type=\"email\"\n               placeholder=\"example@example.com\"\n               class=\"form-control\" name=\"email\"\n               [(ngModel)]=\"model.email\"\n\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"startDate\">Start date:</label>\n        <input type=\"date\" id=\"startDate\"\n               class=\"form-control\"\n               name=\"startDate\"\n               placeholder=\"Start date\"\n               [(ngModel)]=\"model.startDate\"/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"endDate\">End date:</label>\n        <input type=\"date\" id=\"endDate\"\n               class=\"form-control\"\n               name=\"endDate\"\n               placeholder=\"End date\"\n               [(ngModel)]=\"model.endDate\"/>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-danger\" value=\"Generate certificate\" />\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-home-page',\r\n  templateUrl: './admin-home-page.component.html',\r\n  styleUrls: ['./admin-home-page.component.css']\r\n})\r\nexport class AdminHomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin-home-page works!</p>\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateServiceService} from '../../services/certificate-service.service';\nimport {Certificate} from '../../models/certificate';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-all-certificates',\n  templateUrl: './all-certificates.component.html',\n  styleUrls: ['./all-certificates.component.css']\n})\nexport class AllCertificatesComponent implements OnInit {\n\n  // tslint:disable-next-line:max-line-length\n  displayedColumns: string[] = ['issName', 'subjName', 'serialNumber', 'startDate', 'endDate', 'download', 'revoke'];\n  myResponse: Certificate[];\n  dataSource: MatTableDataSource<Certificate>;\n  constructor(private certService: CertificateServiceService) { }\n\n  ngOnInit(): void {\n    this.certService.getAllCertificates().subscribe(\n      data => {\n        this.myResponse = data;\n        console.log(data);\n        this.dataSource = new MatTableDataSource<Certificate>(this.myResponse);\n      },\n      error => {\n        console.log('Error occured', error);\n      }\n    );\n  }\n  revoke(certificate: Certificate) {\n    this.certService.revokeCertificate(certificate).subscribe(\n      res => {\n        alert('Revoked');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n\n\n  // isRevoked(cert: Certificate): boolean {\n  //   this.certService.checkCertificateStatus(cert).subscribe(\n  //     res =>{\n  //       alert('Already revoked');\n  //       return true;\n  //     }, error => {\n  //       alert('Error revoke');\n  //       return false;\n  //     }\n  //   );\n  //   return false;\n  // }\n\n\n  download(certificate: Certificate) {\n    this.certService.downloadCertificate(certificate).subscribe(\n      res => {\n        alert('Downloaded');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n  <ng-container matColumnDef=\"issName\">\n    <th mat-header-cell *matHeaderCellDef> Issuer name: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.issName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"subjName\">\n    <th mat-header-cell *matHeaderCellDef> Subject name: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.subjName}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"serialNumber\">\n    <th mat-header-cell *matHeaderCellDef> Serial number: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.serialNumber}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"startDate\">\n    <th mat-header-cell *matHeaderCellDef> Start date: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"endDate\">\n    <th mat-header-cell *matHeaderCellDef> End date: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"download\">\n    <th mat-header-cell *matHeaderCellDef> Download </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-raised-button color=\"primary\" (click)=\"download(element)\">Download it</button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"revoke\">\n    <th mat-header-cell *matHeaderCellDef> Revoke </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-raised-button color=\"primary\" (click)=\"revoke(element)\">Revoke it</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Role } from 'src/app/models/role';\r\n\r\nexport class LoginUser {\r\n  constructor(\r\n    public email: string,\r\n    public password: string\r\n  ) {}\r\n}\r\n@Component({\r\n  selector: 'app-login-component',\r\n  templateUrl: './login-component.component.html',\r\n  styleUrls: ['./login-component.component.css']\r\n})\r\n\r\nexport class LoginComponentComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  public submitted = false;\r\n  private user:User;\r\n  private loginUser:LoginUser;\r\n  \r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    public formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private userService: UserService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm=this.formBuilder.group({\r\n      username: ['',[Validators.required]],\r\n      password: ['',Validators.required]\r\n    })\r\n  }\r\n\r\n  get f(){\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted=true;\r\n\r\n    if(this.loginForm.invalid)\r\n    return;\r\n  \r\n\r\n  this.loginUser=new LoginUser(\r\n    this.f.username.value,\r\n    this.f.password.value\r\n  )\r\n    this.user=this.userService.getUser(this.f.username.value);\r\n    this.attemptLogin();\r\n  }\r\n\r\n  public attemptLogin() {\r\n    if (this.user.role === Role.ADMIN && this.loginUser.password === this.user.password) {\r\n      console.log(this.user);\r\n      this.adminService.loginAdmin(this.user).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          if (data !== null) {\r\n            console.log('Successful logged in');\r\n            this.router.navigate(['/admin/home']);\r\n          } else {\r\n            alert('Wrong username or password.');\r\n            console.log('Login error');\r\n          }\r\n        },\r\n        error => {\r\n          alert('Wrong username or password.');\r\n          console.log(error);\r\n        }\r\n      );\r\n    } \r\n  }\r\n}\r\n\r\n","<div class=\"main-content\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n          <mat-card>\r\n            <h3>Login</h3>\r\n            <hr>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"username\" id=\"username\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters long</div>\r\n                  <div *ngIf=\"f.password.errors.pattern\">Password must contain at least 1 lowercase, 1 uppercase letter and 1 number</div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <button mat-raised-button color=\"primary\" class=\"pull-right\">Login</button>\r\n\r\n            </form>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule { }","export class Admin {\r\n    username: string;\r\n    password: string;\r\n    constructor(username:string,password:string){\r\n        this.username=username;\r\n        this.password=password;\r\n    }\r\n}","export enum Role {\r\n    NONE,\r\n    ADMIN\r\n    }","import { Role } from './role';\r\n\r\nexport class User {\r\n    username: string;\r\n    password: string;\r\n    role: Role;\r\n    constructor(username:string,password:string,role:Role){\r\n        this.username=username;\r\n        this.password=password;\r\n        this.role=role;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Admin } from '../models/admin';\r\nimport { UserService } from './user.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  \r\n  urlAdmin = environment.baseUrl + environment.admin;\r\n  listAdmins: Array<Admin>= new Array<Admin>();\r\n  admin:Admin;\r\n  tmp: Array<Admin>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) {\r\n    this.getAllAdmins();\r\n  }\r\n\r\n  public loginAdmin(admin) {\r\n    this.userService.setToken(admin);\r\n    return this.http.post(environment.baseUrl + '/login', admin, {responseType: 'text'});\r\n  }\r\n\r\n  public addAdmin(p: Admin) {\r\n    if(this.getAdmin(p.username)===null){\r\n      this.listAdmins.push(p);\r\n    }\r\n  }\r\n  \r\n  public getAdmin(username: string) {\r\n    if ( this.listAdmins.length === 0) {\r\n      return null;\r\n    }\r\n    for (const u of this.listAdmins) {\r\n      if ( u.username === username) {\r\n        return u;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  public getAllAdmins(): Array<Admin> {\r\n    this.http.get(this.urlAdmin + '/all').subscribe((data: Admin[]) => {\r\n        for (const c of data) {\r\n          this.admin = new Admin(c.username,c.password);\r\n          this.addAdmin(this.admin);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    return this.listAdmins;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CertificateDB} from '../models/certificateDB';\nimport {Observable} from 'rxjs';\nimport {Certificate} from '../models/certificate';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CertificateServiceService {\n\n  private URL: string;\n  constructor(private http: HttpClient) {\n    this.URL = environment.baseUrl + environment.certificate;\n  }\n\n  public getAllCertificates(): Observable<Certificate[]> {\n    return this.http.get<Certificate[]>(this.URL + '/allCertificates');\n  }\n\n  public revokeCertificate(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/revoke', certificate);\n  }\n\n  public checkCertificateStatus(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/check', certificate);\n  }\n\n  public getAllPossibleIssuers(): Observable<CertificateDB[]> {\n    return this.http.get<CertificateDB[]>( this.URL + '/allPossibleIssuers');\n  }\n\n  public downloadCertificate(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/download', certificate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport const TOKEN='LoggedInUser';\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class UserService{\r\n    urlUser = environment.baseUrl + environment.user;\r\n    users: Array<User>=new Array<User>();\r\n    user:User= new User('', '', Role.NONE);\r\n    u:User;\r\n    constructor(private router: Router, private http: HttpClient) {\r\n      this.getAllUsers();\r\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n    }\r\n\r\n    public addUser(u: User){\r\n      if (this.getUser(u.username) === null) {\r\n        this.users.push(u);\r\n      }\r\n    }\r\n\r\n    public setLoggedUser(user: User) {\r\n      this.user = user;\r\n    }\r\n  \r\n    public getLoggedUser() {\r\n      return this.user;\r\n    }\r\n    \r\n  public getUser(username: string) {\r\n    if ( this.users.length === 0) {\r\n      return null;\r\n    }\r\n    for (const u of this.users) {\r\n      if ( u.username === username) {\r\n        return u;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n    public setToken(user){\r\n        this.user=user;\r\n        localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n\r\n    }\r\n\r\n    public isLoggedIn() {\r\n        if(localStorage.getItem(TOKEN)!==null){\r\n          return localStorage.getItem(TOKEN);\r\n        }else {\r\n          \r\n          return null;\r\n        }\r\n      }\r\n\r\n      public setUser(u: User) {\r\n\r\n        for (const p1 of this.users) {\r\n          if (p1.username === u.username) {\r\n            p1.password = u.password;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n    public logout(){\r\n      this.router.navigate(['']);\r\n      this.user =  new User('', '', Role.NONE);\r\n      localStorage.removeItem(TOKEN);\r\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n    }\r\n\r\n    public isNone() {\r\n      if (this.isLoggedIn()) {\r\n        return this.user.role === Role.NONE;\r\n      }\r\n    }\r\n    \r\n    public isAdmin() {\r\n        if (this.isLoggedIn()) {\r\n          return this.user.role === Role.ADMIN;\r\n        }\r\n      }\r\n\r\n      public getAllUsers(): Array<User> {\r\n        this.http.get(this.urlUser + '/all').subscribe((data: User[]) => {\r\n            for (const c of data) {\r\n                this.u = new User(c.username, c.password, this.whichRole(c.role.toString()));\r\n                this.addUser(this.u);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        console.log(this.users);\r\n        return this.users;\r\n      }\r\n\r\n      public whichRole(role: string) {\r\n        if (role === 'ADMIN') {\r\n          return Role.ADMIN;\r\n        } else {\r\n          return null;\r\n        }\r\n    \r\n      }\r\n\r\n    }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'https://localhost:8443',\r\n  login: '/login',\r\n  admin:'/admin',\r\n  user:'/user',\r\n  certificate:'/certificate'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}
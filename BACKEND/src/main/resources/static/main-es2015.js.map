{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin-home-page/admin-home-page.component.ts","./src/app/components/admin-home-page/admin-home-page.component.html","./src/app/components/login-component/login-component.component.ts","./src/app/components/login-component/login-component.component.html","./src/app/material-module.ts","./src/app/models/admin.ts","./src/app/models/role.ts","./src/app/models/user.ts","./src/app/services/admin.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\n\r\nconst routes: Routes=[\r\n    {\r\n        path: '',\r\n        component: LoginComponentComponent,\r\n      },\r\n      {\r\n        path:'admin/home',\r\n        component: AdminHomePageComponent\r\n      }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(\n    private router: Router,\n    private breakpointObserver: BreakpointObserver,\n    private userService:UserService\n    ) { }\n  \n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n      .pipe(\n        map((result) => result.matches),\n        shareReplay()\n      );\n  \n      public isLoggedIn() {\n        return this.userService.isLoggedIn();\n      }\n      public isNone(){\n        return this.userService.isNone();\n      }\n      public isAdmin() {\n        return this.userService.isAdmin();\n      }\n      public onLogout() {\n        this.userService.logout();\n      }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === true\">\r\n      <mat-toolbar>Meni</mat-toolbar>\r\n        <mat-nav-list *ngIf = \"isNone()\">\r\n          <a mat-list-item routerLink=\"/login\">Prijavi se</a>\r\n        </mat-nav-list>\r\n  \r\n        <mat-nav-list *ngIf=\"isAdmin()\">\r\n          <a mat-list-item (click)=\"onLogout()\">Odjavi se</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <mat-toolbar>\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>P I K</span>\r\n      </mat-toolbar>\r\n      <!-- Add Content Here -->\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './material-module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponentComponent,\n    AdminHomePageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    DemoMaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home-page',\n  templateUrl: './admin-home-page.component.html',\n  styleUrls: ['./admin-home-page.component.css']\n})\nexport class AdminHomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-home-page works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Role } from 'src/app/models/role';\n\nexport class LoginUser {\n  constructor(\n    public email: string,\n    public password: string\n  ) {}\n}\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\n\nexport class LoginComponentComponent implements OnInit {\n\n  public loginForm: FormGroup;\n  public submitted = false;\n  private user:User;\n  private loginUser:LoginUser;\n  \n\n  constructor(\n    private adminService: AdminService,\n    public formBuilder: FormBuilder,\n    public router: Router,\n    private userService: UserService,\n\n  ) { }\n\n  ngOnInit() {\n    this.loginForm=this.formBuilder.group({\n      username: ['',[Validators.required]],\n      password: ['',Validators.required]\n    })\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n\n  onSubmit(){\n    this.submitted=true;\n\n    if(this.loginForm.invalid)\n    return;\n  \n\n  this.loginUser=new LoginUser(\n    this.f.username.value,\n    this.f.password.value\n  )\n    this.user=this.userService.getUser(this.f.username.value);\n    this.attemptLogin();\n  }\n\n  public attemptLogin() {\n    if (this.user.role === Role.ADMIN && this.loginUser.password === this.user.password) {\n      console.log(this.user);\n      this.adminService.loginAdmin(this.user).subscribe(\n        data => {\n          console.log(data);\n          if (data !== null) {\n            console.log('Successful logged in');\n            this.router.navigate(['/admin/home']);\n          } else {\n            alert('Wrong username or password.');\n            console.log('Login error');\n          }\n        },\n        error => {\n          alert('Wrong username or password.');\n          console.log(error);\n        }\n      );\n    } \n  }\n}\n\n","<div class=\"main-content\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <mat-card>\n            <h3>Prijava</h3>\n            <hr>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  \n              <div class=\"form-group\">\n                <label for=\"username\">Korisnicko ime</label>\n                <input type=\"username\" id=\"username\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"password\">Sifra</label>\n                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters long</div>\n                  <div *ngIf=\"f.password.errors.pattern\">Password must contain at least 1 lowercase, 1 uppercase letter and 1 number</div>\n                </div>\n              </div>\n  \n  \n              <button mat-raised-button color=\"primary\" class=\"pull-right\">Prijava</button>\n  \n            </form>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule { }","export class Admin {\r\n    username: string;\r\n    password: string;\r\n    constructor(username:string,password:string){\r\n        this.username=username;\r\n        this.password=password;\r\n    }\r\n}","export enum Role {\r\n    NONE,\r\n    ADMIN\r\n    }","import { Role } from './role';\r\n\r\nexport class User {\r\n    username: string;\r\n    password: string;\r\n    role: Role;\r\n    constructor(username:string,password:string,role:Role){\r\n        this.username=username;\r\n        this.password=password;\r\n        this.role=role;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Admin } from '../models/admin';\nimport { UserService } from './user.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  \n  urlAdmin = environment.baseUrl + environment.admin;\n  listAdmins: Array<Admin>= new Array<Admin>();\n  admin:Admin;\n  tmp: Array<Admin>;\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService\n  ) {\n    this.getAllAdmins();\n  }\n\n  public loginAdmin(admin) {\n    this.userService.setToken(admin);\n    return this.http.post(environment.baseUrl + '/login', admin, {responseType: 'text'});\n  }\n\n  public addAdmin(p: Admin) {\n    if(this.getAdmin(p.username)===null){\n      this.listAdmins.push(p);\n    }\n  }\n  \n  public getAdmin(username: string) {\n    if ( this.listAdmins.length === 0) {\n      return null;\n    }\n    for (const u of this.listAdmins) {\n      if ( u.username === username) {\n        return u;\n      }\n    }\n    return null;\n  }\n\n\n  public getAllAdmins(): Array<Admin> {\n    this.http.get(this.urlAdmin + '/all').subscribe((data: Admin[]) => {\n        for (const c of data) {\n          this.admin = new Admin(c.username,c.password);\n          this.addAdmin(this.admin);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    return this.listAdmins;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { Role } from '../models/role';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nexport const TOKEN='LoggedInUser';\n\n@Injectable({\n    providedIn:'root'\n})\nexport class UserService{\n    urlUser = environment.baseUrl + environment.user;\n    users: Array<User>=new Array<User>();\n    user:User= new User('', '', Role.NONE);\n    u:User;\n    constructor(private router: Router, private http: HttpClient) {\n      this.getAllUsers();\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\n    }\n\n    public addUser(u: User){\n      if (this.getUser(u.username) === null) {\n        this.users.push(u);\n      }\n    }\n\n    public setLoggedUser(user: User) {\n      this.user = user;\n    }\n  \n    public getLoggedUser() {\n      return this.user;\n    }\n    \n  public getUser(username: string) {\n    if ( this.users.length === 0) {\n      return null;\n    }\n    for (const u of this.users) {\n      if ( u.username === username) {\n        return u;\n      }\n    }\n    return null;\n  }\n\n    public setToken(user){\n        this.user=user;\n        localStorage.setItem(TOKEN, JSON.stringify(this.user));\n\n    }\n\n    public isLoggedIn() {\n        if(localStorage.getItem(TOKEN)!==null){\n          return localStorage.getItem(TOKEN);\n        }else {\n          \n          return null;\n        }\n      }\n\n      public setUser(u: User) {\n\n        for (const p1 of this.users) {\n          if (p1.username === u.username) {\n            p1.password = u.password;\n            return;\n          }\n        }\n      }\n\n    public logout(){\n      this.router.navigate(['']);\n      this.user =  new User('', '', Role.NONE);\n      localStorage.removeItem(TOKEN);\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\n    }\n\n    public isNone() {\n      if (this.isLoggedIn()) {\n        return this.user.role === Role.NONE;\n      }\n    }\n    \n    public isAdmin() {\n        if (this.isLoggedIn()) {\n          return this.user.role === Role.ADMIN;\n        }\n      }\n\n      public getAllUsers(): Array<User> {\n        this.http.get(this.urlUser + '/all').subscribe((data: User[]) => {\n            for (const c of data) {\n                this.u = new User(c.username, c.password, this.whichRole(c.role.toString()));\n                this.addUser(this.u);\n            }\n          },\n          error => {\n            console.log(error);\n          }\n        );\n        console.log(this.users);\n        return this.users;\n      }\n\n      public whichRole(role: string) {\n        if (role === 'ADMIN') {\n          return Role.ADMIN;\n        } else {\n          return null;\n        }\n    \n      }\n\n    }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8081',\n  login: '/login',\n  admin:'/admin',\n  user:'/user'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
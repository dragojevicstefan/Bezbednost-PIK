{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-certificate/add-certificate.component.ts","webpack:///src/app/components/add-certificate/add-certificate.component.html","webpack:///src/app/components/add-selfsigned/add-selfsigned.component.ts","webpack:///src/app/components/add-selfsigned/add-selfsigned.component.html","webpack:///src/app/components/admin-home-page/admin-home-page.component.ts","webpack:///src/app/components/admin-home-page/admin-home-page.component.html","webpack:///src/app/components/all-certificates/all-certificates.component.ts","webpack:///src/app/components/all-certificates/all-certificates.component.html","webpack:///src/app/components/login-component/login-component.component.ts","webpack:///src/app/components/login-component/login-component.component.html","webpack:///src/app/material-module.ts","webpack:///src/app/models/admin.ts","webpack:///src/app/models/role.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/certificate-service.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","breakpointObserver","userService","isHandset$","observe","Handset","pipe","result","matches","isLoggedIn","isNone","isAdmin","logout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddCertificateComponent","http","certService","model","startDate","endDate","serialNumber","name","surname","country","organization","organizationUnit","email","type","alias","issuerSerialNumber","getAllPossibleIssuers","subscribe","data","listOfPossibleIssuers","error","console","log","url","post","res","alert","generateCertificate","AddSelfsignedComponent","navigate","generateSelfSignedCertificate","AdminHomePageComponent","AllCertificatesComponent","displayedColumns","getAllCertificates","myResponse","dataSource","certificate","revokeCertificate","downloadCertificate","LoginUser","password","LoginComponentComponent","adminService","formBuilder","submitted","loginForm","group","username","required","invalid","loginUser","f","value","user","getUser","attemptLogin","role","ADMIN","loginAdmin","controls","onSubmit","DemoMaterialModule","Admin","Role","User","AdminService","urlAdmin","baseUrl","admin","listAdmins","Array","getAllAdmins","setToken","responseType","p","getAdmin","push","length","u","get","c","addAdmin","providedIn","CertificateServiceService","URL","TOKEN","UserService","urlUser","users","NONE","getAllUsers","localStorage","setItem","JSON","stringify","getItem","p1","removeItem","whichRole","toString","addUser","environment","production","login","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\nimport {AddCertificateComponent} from './components/add-certificate/add-certificate.component';\r\nimport {AddSelfsignedComponent} from './components/add-selfsigned/add-selfsigned.component';\r\nimport {AllCertificatesComponent} from './components/all-certificates/all-certificates.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponentComponent,\r\n      },\r\n      {\r\n        path: 'admin/home',\r\n        component: AdminHomePageComponent\r\n      },\r\n  {\r\n      path: 'admin/add-certificate',\r\n    component: AddCertificateComponent\r\n  },\r\n  {\r\n    path: 'admin/add-selfsigned',\r\n    component: AddSelfsignedComponent\r\n  },\r\n  {\r\n    path: 'admin/all-certificates',\r\n    component: AllCertificatesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private breakpointObserver: BreakpointObserver,\r\n    private userService: UserService\r\n    ) { }\r\n\r\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n      .pipe(\r\n        map((result) => result.matches),\r\n        shareReplay()\r\n      );\r\n\r\n      public isLoggedIn() {\r\n        return this.userService.isLoggedIn();\r\n      }\r\n      public isNone(){\r\n        return this.userService.isNone();\r\n      }\r\n      public isAdmin() {\r\n        return this.userService.isAdmin();\r\n      }\r\n      public onLogout() {\r\n        this.userService.logout();\r\n      }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === true\">\r\n      <mat-toolbar>Menu</mat-toolbar>\r\n        <mat-nav-list *ngIf = \"isNone()\">\r\n          <a mat-list-item routerLink=\"/login\">Log in</a>\r\n        </mat-nav-list>\r\n\r\n        <mat-nav-list *ngIf=\"isAdmin()\">\r\n          <a mat-list-item routerLink=\"/admin/add-certificate\">Add Certificate</a>\r\n          <a mat-list-item routerLink=\"/admin/add-selfsigned\">Add SelfSigned Certificate</a>\r\n          <a mat-list-item routerLink=\"/admin/all-certificates\">All Certificates</a>\r\n          <a mat-list-item (click)=\"onLogout()\">Log out</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <mat-toolbar>\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">Menu</mat-icon>\r\n        </button>\r\n        <span>P I K</span>\r\n      </mat-toolbar>\r\n      <!-- Add Content Here -->\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddCertificateComponent } from './components/add-certificate/add-certificate.component';\nimport { AddSelfsignedComponent } from './components/add-selfsigned/add-selfsigned.component';\nimport { AllCertificatesComponent } from './components/all-certificates/all-certificates.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponentComponent,\r\n    AdminHomePageComponent,\r\n    AddCertificateComponent,\r\n    AddSelfsignedComponent,\r\n    AllCertificatesComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NoopAnimationsModule,\r\n    DemoMaterialModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateModel} from '../../models/certificateModel';\nimport {HttpClient} from '@angular/common/http';\nimport {CertificateServiceService} from '../../services/certificate-service.service';\nimport {CertificateDB} from '../../models/certificateDB';\n\n@Component({\n  selector: 'app-add-certificate',\n  templateUrl: './add-certificate.component.html',\n  styleUrls: ['./add-certificate.component.css']\n})\nexport class AddCertificateComponent implements OnInit {\n\n  model: CertificateModel = {\n    startDate: '',\n    endDate: '',\n    serialNumber: '',\n    name: '',\n    surname: '',\n    country: '',\n    organization: '',\n    organizationUnit: '',\n    email: '',\n    type: '',\n    alias: '',\n    issuerSerialNumber: '',\n  };\n  listOfPossibleIssuers: CertificateDB [];\n  constructor(private http: HttpClient ,\n              private certService: CertificateServiceService ) {}\n\n  ngOnInit(): void {\n    this.certService.getAllPossibleIssuers().subscribe(\n      data => {\n        this.listOfPossibleIssuers = data;\n      },\n      error => {\n        console.log('Error occured', error);\n      }\n    );\n  }\n\n  generateCertificate(): void {\n    const url = 'https://localhost:8443/certificate';\n\n\n    this.http.post(url, this.model).subscribe(\n      res => {\n        alert('Uspesno');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n\n\n}\n","\r\n  <div class=\"row\">\r\n    <div class=\"offset-3\"></div>\r\n    <div class=\"col-md-6\">\r\n      <form name=\"certificateForm\" #f=\"ngForm\" (ngSubmit)=\"generateCertificate()\" novalidate class=\"feedback-form\">\r\n\r\n        <div class=\"form-group\">\r\n          <b>Choose type:</b><br><br>\r\n\r\n          <input type=\"radio\" id=\"intermediate\" name=\"type\" [(ngModel)]=\"model.type\" value=\"INTERMEDIATE\">\r\n          <label for=\"intermediate\" style=\"padding-right:20px;\">Intermediate</label>\r\n          <input type=\"radio\" id=\"client\" name=\"type\" [(ngModel)]=\"model.type\" value=\"CLIENT\">\r\n          <label for=\"client\">Client</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <h4><b>Choose issuer:</b></h4>\r\n          <select class=\"form-control\" [(ngModel)]=\"model.issuerSerialNumber\" name=\"issuerSerialNumber\">\r\n            <option  *ngFor=\" let issuer of listOfPossibleIssuers \" value=\"{{issuer.serialNumber}}\">{{issuer.subjectCommonName}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\" >\r\n          <h4><b>Client data</b></h4>\r\n          <div class=\"form-group\">\r\n            <label>Name:</label>\r\n            <input type=\"text\"\r\n                   placeholder=\"Name\"\r\n                   class=\"form-control\" name=\"name\"\r\n                   [(ngModel)]=\"model.name\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\" >\r\n            <label>Surname:</label>\r\n            <input type=\"text\" name=\"surname\"\r\n                   placeholder=\"Surname\"\r\n                   class=\"form-control\"\r\n                   [(ngModel)]=\"model.surname\"\r\n            />\r\n          </div>\r\n          <label>Country:</label>\r\n          <input type=\"text\" name=\"country\"\r\n                 placeholder=\"Country\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)]=\"model.country\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\" >\r\n          <label>Organization:</label>\r\n          <input type=\"text\" name=\"organization\"\r\n                 placeholder=\"Organization\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)]=\"model.organization\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Organization unit:</label>\r\n          <input type=\"text\"\r\n                 placeholder=\"Organization unit\"\r\n                 class=\"form-control\" name=\"organizationUnit\"\r\n                 [(ngModel)]=\"model.organizationUnit\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>E-mail:</label>\r\n          <input type=\"email\"\r\n                 placeholder=\"example@example.com\"\r\n                 class=\"form-control\" name=\"email\"\r\n                 [(ngModel)]=\"model.email\"\r\n\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"startDate\">Start date:</label>\r\n          <input type=\"date\" id=\"startDate\"\r\n                 class=\"form-control\"\r\n                 name=\"startDate\"\r\n                 placeholder=\"Start date\"\r\n                 [(ngModel)]=\"model.startDate\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"endDate\">End date:</label>\r\n          <input type=\"date\" id=\"endDate\"\r\n                 class=\"form-control\"\r\n                 name=\"endDate\"\r\n                 placeholder=\"End date\"\r\n                 [(ngModel)]=\"model.endDate\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"submit\" class=\"btn btn-danger\" value=\"Generate certificate\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateModel} from '../../models/certificateModel';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-selfsigned',\n  templateUrl: './add-selfsigned.component.html',\n  styleUrls: ['./add-selfsigned.component.css']\n})\nexport class AddSelfsignedComponent implements OnInit {\n\n\n  model: CertificateModel = {\n    startDate: '',\n    endDate: '',\n    serialNumber: '',\n    name: '',\n    surname: '',\n    country: '',\n    organization: '',\n    organizationUnit: '',\n    email: '',\n    type: '',\n    alias: '',\n    issuerSerialNumber: ''\n  };\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n\n\n  }\n\n\n  generateSelfSignedCertificate() {\n    const url = 'https://localhost:8443/certificate/selfSigned/generate';\n    this.http.post(url, this.model).subscribe(\n      res => {\n        this.router.navigate(['/admin/home']);\n        alert('Uspesno');\n      },\n      error => {\n        alert('Error.');\n        console.log('Error');\n      }\n    );\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"offset-3\"></div>\n  <div class=\"col-md-6\">\n    <form name=\"certificateForm\" #f=\"ngForm\" (ngSubmit)=\"generateSelfSignedCertificate()\" novalidate class=\"feedback-form\">\n\n      <div class=\"form-group\">\n        <h4><b>Client data:</b></h4>\n        <div class=\"form-group\">\n          <label>Name:</label>\n          <input type=\"text\"\n                 placeholder=\"Name\"\n                 class=\"form-control\" name=\"name\"\n                 [(ngModel)]=\"model.name\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>Surname:</label>\n          <input type=\"text\" name=\"surname\"\n                 placeholder=\"Surname\"\n                 class=\"form-control\"\n                 [(ngModel)]=\"model.surname\"\n          />\n        </div>\n        <label>Country:</label>\n        <input type=\"text\" name=\"country\"\n               placeholder=\"Country\"\n               class=\"form-control\"\n               [(ngModel)]=\"model.country\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Organization:</label>\n        <input type=\"text\" name=\"organization\"\n               placeholder=\"Organization\"\n               class=\"form-control\"\n               [(ngModel)]=\"model.organization\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Organization unit:</label>\n        <input type=\"text\"\n               placeholder=\"Organization unit\"\n               class=\"form-control\" name=\"organizationUnit\"\n               [(ngModel)]=\"model.organizationUnit\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>E-mail:</label>\n        <input type=\"email\"\n               placeholder=\"example@example.com\"\n               class=\"form-control\" name=\"email\"\n               [(ngModel)]=\"model.email\"\n\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"startDate\">Start date:</label>\n        <input type=\"date\" id=\"startDate\"\n               class=\"form-control\"\n               name=\"startDate\"\n               placeholder=\"Start date\"\n               [(ngModel)]=\"model.startDate\"/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"endDate\">End date:</label>\n        <input type=\"date\" id=\"endDate\"\n               class=\"form-control\"\n               name=\"endDate\"\n               placeholder=\"End date\"\n               [(ngModel)]=\"model.endDate\"/>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-danger\" value=\"Generate certificate\" />\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-home-page',\r\n  templateUrl: './admin-home-page.component.html',\r\n  styleUrls: ['./admin-home-page.component.css']\r\n})\r\nexport class AdminHomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin-home-page works!</p>\r\n","import { Component, OnInit } from '@angular/core';\nimport {CertificateServiceService} from '../../services/certificate-service.service';\nimport {Certificate} from '../../models/certificate';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-all-certificates',\n  templateUrl: './all-certificates.component.html',\n  styleUrls: ['./all-certificates.component.css']\n})\nexport class AllCertificatesComponent implements OnInit {\n\n  // tslint:disable-next-line:max-line-length\n  displayedColumns: string[] = ['issName', 'subjName', 'serialNumber', 'startDate', 'endDate', 'download', 'revoke'];\n  myResponse: Certificate[];\n  dataSource: MatTableDataSource<Certificate>;\n  constructor(private certService: CertificateServiceService) { }\n\n  ngOnInit(): void {\n    this.certService.getAllCertificates().subscribe(\n      data => {\n        this.myResponse = data;\n        console.log(data);\n        this.dataSource = new MatTableDataSource<Certificate>(this.myResponse);\n      },\n      error => {\n        console.log('Error occured', error);\n      }\n    );\n  }\n  revoke(certificate: Certificate) {\n    this.certService.revokeCertificate(certificate).subscribe(\n      res => {\n        alert('Revoked');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n\n\n  // isRevoked(cert: Certificate): boolean {\n  //   this.certService.checkCertificateStatus(cert).subscribe(\n  //     res =>{\n  //       alert('Already revoked');\n  //       return true;\n  //     }, error => {\n  //       alert('Error revoke');\n  //       return false;\n  //     }\n  //   );\n  //   return false;\n  // }\n\n\n  download(certificate: Certificate) {\n    this.certService.downloadCertificate(certificate).subscribe(\n      res => {\n        alert('Downloaded');\n      },\n      error => {\n        alert('Error');\n      }\n    );\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n  <ng-container matColumnDef=\"issName\">\n    <th mat-header-cell *matHeaderCellDef> Issuer name: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.issName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"subjName\">\n    <th mat-header-cell *matHeaderCellDef> Subject name: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.subjName}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"serialNumber\">\n    <th mat-header-cell *matHeaderCellDef> Serial number: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.serialNumber}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"startDate\">\n    <th mat-header-cell *matHeaderCellDef> Start date: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"endDate\">\n    <th mat-header-cell *matHeaderCellDef> End date: </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"download\">\n    <th mat-header-cell *matHeaderCellDef> Download </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-raised-button color=\"primary\" (click)=\"download(element)\">Download it</button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"revoke\">\n    <th mat-header-cell *matHeaderCellDef> Revoke </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-raised-button color=\"primary\" (click)=\"revoke(element)\">Revoke it</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Role } from 'src/app/models/role';\r\n\r\nexport class LoginUser {\r\n  constructor(\r\n    public email: string,\r\n    public password: string\r\n  ) {}\r\n}\r\n@Component({\r\n  selector: 'app-login-component',\r\n  templateUrl: './login-component.component.html',\r\n  styleUrls: ['./login-component.component.css']\r\n})\r\n\r\nexport class LoginComponentComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  public submitted = false;\r\n  private user:User;\r\n  private loginUser:LoginUser;\r\n  \r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    public formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private userService: UserService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm=this.formBuilder.group({\r\n      username: ['',[Validators.required]],\r\n      password: ['',Validators.required]\r\n    })\r\n  }\r\n\r\n  get f(){\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.submitted=true;\r\n\r\n    if(this.loginForm.invalid)\r\n    return;\r\n  \r\n\r\n  this.loginUser=new LoginUser(\r\n    this.f.username.value,\r\n    this.f.password.value\r\n  )\r\n    this.user=this.userService.getUser(this.f.username.value);\r\n    this.attemptLogin();\r\n  }\r\n\r\n  public attemptLogin() {\r\n    if (this.user.role === Role.ADMIN && this.loginUser.password === this.user.password) {\r\n      console.log(this.user);\r\n      this.adminService.loginAdmin(this.user).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          if (data !== null) {\r\n            console.log('Successful logged in');\r\n            this.router.navigate(['/admin/home']);\r\n          } else {\r\n            alert('Wrong username or password.');\r\n            console.log('Login error');\r\n          }\r\n        },\r\n        error => {\r\n          alert('Wrong username or password.');\r\n          console.log(error);\r\n        }\r\n      );\r\n    } \r\n  }\r\n}\r\n\r\n","<div class=\"main-content\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n          <mat-card>\r\n            <h3>Login</h3>\r\n            <hr>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"username\" id=\"username\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters long</div>\r\n                  <div *ngIf=\"f.password.errors.pattern\">Password must contain at least 1 lowercase, 1 uppercase letter and 1 number</div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <button mat-raised-button color=\"primary\" class=\"pull-right\">Login</button>\r\n\r\n            </form>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule { }","export class Admin {\r\n    username: string;\r\n    password: string;\r\n    constructor(username:string,password:string){\r\n        this.username=username;\r\n        this.password=password;\r\n    }\r\n}","export enum Role {\r\n    NONE,\r\n    ADMIN\r\n    }","import { Role } from './role';\r\n\r\nexport class User {\r\n    username: string;\r\n    password: string;\r\n    role: Role;\r\n    constructor(username:string,password:string,role:Role){\r\n        this.username=username;\r\n        this.password=password;\r\n        this.role=role;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Admin } from '../models/admin';\r\nimport { UserService } from './user.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  \r\n  urlAdmin = environment.baseUrl + environment.admin;\r\n  listAdmins: Array<Admin>= new Array<Admin>();\r\n  admin:Admin;\r\n  tmp: Array<Admin>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) {\r\n    this.getAllAdmins();\r\n  }\r\n\r\n  public loginAdmin(admin) {\r\n    this.userService.setToken(admin);\r\n    return this.http.post(environment.baseUrl + '/login', admin, {responseType: 'text'});\r\n  }\r\n\r\n  public addAdmin(p: Admin) {\r\n    if(this.getAdmin(p.username)===null){\r\n      this.listAdmins.push(p);\r\n    }\r\n  }\r\n  \r\n  public getAdmin(username: string) {\r\n    if ( this.listAdmins.length === 0) {\r\n      return null;\r\n    }\r\n    for (const u of this.listAdmins) {\r\n      if ( u.username === username) {\r\n        return u;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  public getAllAdmins(): Array<Admin> {\r\n    this.http.get(this.urlAdmin + '/all').subscribe((data: Admin[]) => {\r\n        for (const c of data) {\r\n          this.admin = new Admin(c.username,c.password);\r\n          this.addAdmin(this.admin);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    return this.listAdmins;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CertificateDB} from '../models/certificateDB';\nimport {Observable} from 'rxjs';\nimport {Certificate} from '../models/certificate';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CertificateServiceService {\n\n  private URL: string;\n  constructor(private http: HttpClient) {\n    this.URL = environment.baseUrl + environment.certificate;\n  }\n\n  public getAllCertificates(): Observable<Certificate[]> {\n    return this.http.get<Certificate[]>(this.URL + '/allCertificates');\n  }\n\n  public revokeCertificate(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/revoke', certificate);\n  }\n\n  public checkCertificateStatus(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/check', certificate);\n  }\n\n  public getAllPossibleIssuers(): Observable<CertificateDB[]> {\n    return this.http.get<CertificateDB[]>( this.URL + '/allPossibleIssuers');\n  }\n\n  public downloadCertificate(certificate: Certificate) {\n    return this.http.post<Certificate>(this.URL + '/download', certificate);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\nimport { Role } from '../models/role';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport const TOKEN='LoggedInUser';\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class UserService{\r\n    urlUser = environment.baseUrl + environment.user;\r\n    users: Array<User>=new Array<User>();\r\n    user:User= new User('', '', Role.NONE);\r\n    u:User;\r\n    constructor(private router: Router, private http: HttpClient) {\r\n      this.getAllUsers();\r\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n    }\r\n\r\n    public addUser(u: User){\r\n      if (this.getUser(u.username) === null) {\r\n        this.users.push(u);\r\n      }\r\n    }\r\n\r\n    public setLoggedUser(user: User) {\r\n      this.user = user;\r\n    }\r\n  \r\n    public getLoggedUser() {\r\n      return this.user;\r\n    }\r\n    \r\n  public getUser(username: string) {\r\n    if ( this.users.length === 0) {\r\n      return null;\r\n    }\r\n    for (const u of this.users) {\r\n      if ( u.username === username) {\r\n        return u;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n    public setToken(user){\r\n        this.user=user;\r\n        localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n\r\n    }\r\n\r\n    public isLoggedIn() {\r\n        if(localStorage.getItem(TOKEN)!==null){\r\n          return localStorage.getItem(TOKEN);\r\n        }else {\r\n          \r\n          return null;\r\n        }\r\n      }\r\n\r\n      public setUser(u: User) {\r\n\r\n        for (const p1 of this.users) {\r\n          if (p1.username === u.username) {\r\n            p1.password = u.password;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n    public logout(){\r\n      this.router.navigate(['']);\r\n      this.user =  new User('', '', Role.NONE);\r\n      localStorage.removeItem(TOKEN);\r\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\r\n    }\r\n\r\n    public isNone() {\r\n      if (this.isLoggedIn()) {\r\n        return this.user.role === Role.NONE;\r\n      }\r\n    }\r\n    \r\n    public isAdmin() {\r\n        if (this.isLoggedIn()) {\r\n          return this.user.role === Role.ADMIN;\r\n        }\r\n      }\r\n\r\n      public getAllUsers(): Array<User> {\r\n        this.http.get(this.urlUser + '/all').subscribe((data: User[]) => {\r\n            for (const c of data) {\r\n                this.u = new User(c.username, c.password, this.whichRole(c.role.toString()));\r\n                this.addUser(this.u);\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        console.log(this.users);\r\n        return this.users;\r\n      }\r\n\r\n      public whichRole(role: string) {\r\n        if (role === 'ADMIN') {\r\n          return Role.ADMIN;\r\n        } else {\r\n          return null;\r\n        }\r\n    \r\n      }\r\n\r\n    }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'https://localhost:8443',\r\n  login: '/login',\r\n  admin:'/admin',\r\n  user:'/user',\r\n  certificate:'/certificate'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}
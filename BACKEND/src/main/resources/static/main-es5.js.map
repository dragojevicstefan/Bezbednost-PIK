{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin-home-page/admin-home-page.component.ts","webpack:///src/app/components/admin-home-page/admin-home-page.component.html","webpack:///src/app/components/login-component/login-component.component.ts","webpack:///src/app/components/login-component/login-component.component.html","webpack:///src/app/material-module.ts","webpack:///src/app/models/admin.ts","webpack:///src/app/models/role.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","breakpointObserver","userService","isHandset$","observe","Handset","pipe","result","matches","isLoggedIn","isNone","isAdmin","logout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdminHomePageComponent","LoginUser","email","password","LoginComponentComponent","adminService","formBuilder","submitted","loginForm","group","username","required","invalid","loginUser","f","value","user","getUser","attemptLogin","role","ADMIN","console","log","loginAdmin","subscribe","data","navigate","alert","error","controls","onSubmit","DemoMaterialModule","Admin","Role","User","AdminService","http","urlAdmin","baseUrl","admin","listAdmins","Array","getAllAdmins","setToken","post","responseType","p","getAdmin","push","length","u","get","c","addAdmin","providedIn","TOKEN","UserService","urlUser","users","NONE","getAllUsers","localStorage","setItem","JSON","stringify","getItem","p1","removeItem","whichRole","toString","addUser","environment","production","login","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\r\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\r\n\r\nconst routes: Routes=[\r\n    {\r\n        path: '',\r\n        component: LoginComponentComponent,\r\n      },\r\n      {\r\n        path:'admin/home',\r\n        component: AdminHomePageComponent\r\n      }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(\n    private router: Router,\n    private breakpointObserver: BreakpointObserver,\n    private userService:UserService\n    ) { }\n  \n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n      .pipe(\n        map((result) => result.matches),\n        shareReplay()\n      );\n  \n      public isLoggedIn() {\n        return this.userService.isLoggedIn();\n      }\n      public isNone(){\n        return this.userService.isNone();\n      }\n      public isAdmin() {\n        return this.userService.isAdmin();\n      }\n      public onLogout() {\n        this.userService.logout();\n      }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === true\">\r\n      <mat-toolbar>Meni</mat-toolbar>\r\n        <mat-nav-list *ngIf = \"isNone()\">\r\n          <a mat-list-item routerLink=\"/login\">Prijavi se</a>\r\n        </mat-nav-list>\r\n  \r\n        <mat-nav-list *ngIf=\"isAdmin()\">\r\n          <a mat-list-item (click)=\"onLogout()\">Odjavi se</a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <mat-toolbar>\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>P I K</span>\r\n      </mat-toolbar>\r\n      <!-- Add Content Here -->\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule }         from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponentComponent } from './components/login-component/login-component.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './material-module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AdminHomePageComponent } from './components/admin-home-page/admin-home-page.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponentComponent,\n    AdminHomePageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    DemoMaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home-page',\n  templateUrl: './admin-home-page.component.html',\n  styleUrls: ['./admin-home-page.component.css']\n})\nexport class AdminHomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-home-page works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Role } from 'src/app/models/role';\n\nexport class LoginUser {\n  constructor(\n    public email: string,\n    public password: string\n  ) {}\n}\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\n\nexport class LoginComponentComponent implements OnInit {\n\n  public loginForm: FormGroup;\n  public submitted = false;\n  private user:User;\n  private loginUser:LoginUser;\n  \n\n  constructor(\n    private adminService: AdminService,\n    public formBuilder: FormBuilder,\n    public router: Router,\n    private userService: UserService,\n\n  ) { }\n\n  ngOnInit() {\n    this.loginForm=this.formBuilder.group({\n      username: ['',[Validators.required]],\n      password: ['',Validators.required]\n    })\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n\n  onSubmit(){\n    this.submitted=true;\n\n    if(this.loginForm.invalid)\n    return;\n  \n\n  this.loginUser=new LoginUser(\n    this.f.username.value,\n    this.f.password.value\n  )\n    this.user=this.userService.getUser(this.f.username.value);\n    this.attemptLogin();\n  }\n\n  public attemptLogin() {\n    if (this.user.role === Role.ADMIN && this.loginUser.password === this.user.password) {\n      console.log(this.user);\n      this.adminService.loginAdmin(this.user).subscribe(\n        data => {\n          console.log(data);\n          if (data !== null) {\n            console.log('Successful logged in');\n            this.router.navigate(['/admin/home']);\n          } else {\n            alert('Wrong username or password.');\n            console.log('Login error');\n          }\n        },\n        error => {\n          alert('Wrong username or password.');\n          console.log(error);\n        }\n      );\n    } \n  }\n}\n\n","<div class=\"main-content\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <mat-card>\n            <h3>Prijava</h3>\n            <hr>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  \n              <div class=\"form-group\">\n                <label for=\"username\">Korisnicko ime</label>\n                <input type=\"username\" id=\"username\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\">\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n              </div>\n  \n              <div class=\"form-group\">\n                <label for=\"password\">Sifra</label>\n                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters long</div>\n                  <div *ngIf=\"f.password.errors.pattern\">Password must contain at least 1 lowercase, 1 uppercase letter and 1 number</div>\n                </div>\n              </div>\n  \n  \n              <button mat-raised-button color=\"primary\" class=\"pull-right\">Prijava</button>\n  \n            </form>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule { }","export class Admin {\r\n    username: string;\r\n    password: string;\r\n    constructor(username:string,password:string){\r\n        this.username=username;\r\n        this.password=password;\r\n    }\r\n}","export enum Role {\r\n    NONE,\r\n    ADMIN\r\n    }","import { Role } from './role';\r\n\r\nexport class User {\r\n    username: string;\r\n    password: string;\r\n    role: Role;\r\n    constructor(username:string,password:string,role:Role){\r\n        this.username=username;\r\n        this.password=password;\r\n        this.role=role;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Admin } from '../models/admin';\nimport { UserService } from './user.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  \n  urlAdmin = environment.baseUrl + environment.admin;\n  listAdmins: Array<Admin>= new Array<Admin>();\n  admin:Admin;\n  tmp: Array<Admin>;\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService\n  ) {\n    this.getAllAdmins();\n  }\n\n  public loginAdmin(admin) {\n    this.userService.setToken(admin);\n    return this.http.post(environment.baseUrl + '/login', admin, {responseType: 'text'});\n  }\n\n  public addAdmin(p: Admin) {\n    if(this.getAdmin(p.username)===null){\n      this.listAdmins.push(p);\n    }\n  }\n  \n  public getAdmin(username: string) {\n    if ( this.listAdmins.length === 0) {\n      return null;\n    }\n    for (const u of this.listAdmins) {\n      if ( u.username === username) {\n        return u;\n      }\n    }\n    return null;\n  }\n\n\n  public getAllAdmins(): Array<Admin> {\n    this.http.get(this.urlAdmin + '/all').subscribe((data: Admin[]) => {\n        for (const c of data) {\n          this.admin = new Admin(c.username,c.password);\n          this.addAdmin(this.admin);\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    return this.listAdmins;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { Role } from '../models/role';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nexport const TOKEN='LoggedInUser';\n\n@Injectable({\n    providedIn:'root'\n})\nexport class UserService{\n    urlUser = environment.baseUrl + environment.user;\n    users: Array<User>=new Array<User>();\n    user:User= new User('', '', Role.NONE);\n    u:User;\n    constructor(private router: Router, private http: HttpClient) {\n      this.getAllUsers();\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\n    }\n\n    public addUser(u: User){\n      if (this.getUser(u.username) === null) {\n        this.users.push(u);\n      }\n    }\n\n    public setLoggedUser(user: User) {\n      this.user = user;\n    }\n  \n    public getLoggedUser() {\n      return this.user;\n    }\n    \n  public getUser(username: string) {\n    if ( this.users.length === 0) {\n      return null;\n    }\n    for (const u of this.users) {\n      if ( u.username === username) {\n        return u;\n      }\n    }\n    return null;\n  }\n\n    public setToken(user){\n        this.user=user;\n        localStorage.setItem(TOKEN, JSON.stringify(this.user));\n\n    }\n\n    public isLoggedIn() {\n        if(localStorage.getItem(TOKEN)!==null){\n          return localStorage.getItem(TOKEN);\n        }else {\n          \n          return null;\n        }\n      }\n\n      public setUser(u: User) {\n\n        for (const p1 of this.users) {\n          if (p1.username === u.username) {\n            p1.password = u.password;\n            return;\n          }\n        }\n      }\n\n    public logout(){\n      this.router.navigate(['']);\n      this.user =  new User('', '', Role.NONE);\n      localStorage.removeItem(TOKEN);\n      localStorage.setItem(TOKEN, JSON.stringify(this.user));\n    }\n\n    public isNone() {\n      if (this.isLoggedIn()) {\n        return this.user.role === Role.NONE;\n      }\n    }\n    \n    public isAdmin() {\n        if (this.isLoggedIn()) {\n          return this.user.role === Role.ADMIN;\n        }\n      }\n\n      public getAllUsers(): Array<User> {\n        this.http.get(this.urlUser + '/all').subscribe((data: User[]) => {\n            for (const c of data) {\n                this.u = new User(c.username, c.password, this.whichRole(c.role.toString()));\n                this.addUser(this.u);\n            }\n          },\n          error => {\n            console.log(error);\n          }\n        );\n        console.log(this.users);\n        return this.users;\n      }\n\n      public whichRole(role: string) {\n        if (role === 'ADMIN') {\n          return Role.ADMIN;\n        } else {\n          return null;\n        }\n    \n      }\n\n    }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8081',\n  login: '/login',\n  admin:'/admin',\n  user:'/user'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}